(
 '[DATA]:index='''''
 ''
 '# Transformation pattern'
 ''
 'For each match in the input document, the transformation pattern causes the creation of text which, for `⎕R`, replaces the matching text and, for `⎕S`, generates one '
 'item in the result.'
 ''
 'There may be either one transformation pattern, or the same number of transformation patterns as search patterns. If there are multiple search patterns and multiple '
 'transformation patterns then the transformation pattern used corresponds to the search pattern which matched the input text.'
 ''
 'Transformation patterns may not be mixed with transformation codes or functions. '
 ''
 'The following characters have special meaning:'
 ''
 '|`%`        | acts as a placeholder for the entire line (line mode) or document (document mode or mixed mode) which contained the match| '
 '|`&`        | acts as a placeholder for the entire portion of text which matched|'
 '|`\n`       | represents a line feed character|'
 '|`\r`       | represents a carriage return|'
 '|`\0`       | equivalent to `&`|'
 '|`\n`       | acts as a placeholder for the text which matched the first to ninth subpattern; n may be any single digit value from 1 to 9|'
 '|`\(n)`     | acts as a placeholder for the text which matched the numbered subpattern; n may have an integer value from 0 to 63.|'
 '|`\<name>`  | acts as a placeholder for the text which matched the named subpattern|'
 '|`\\`       | represents the backslash character|'
 '|`\%`       | represents the percent character|'
 '|`\&`       | represents the ampersand character|'
 '|`\x{nnnn}` | represents a Unicode code point; `nnnn` is a hexadecimal sequence of characters yielding a value between `0x1` and `0xFFFFFFFF`|'
 ''
 'The above may be qualified to fold matching text to upper- or lower-case by using the u and l modifiers respectively. Character sequences beginning with the '
 'backslash place the modifier after the backslash; character sequences with no leading backslash add both a backslash and the modifier to the start of the sequence, '
 'for example:'
 ''
 '|`\u&` | acts as a placeholder for the entire portion of text which matched, folded to upper case|'
 '|`\l0` | equivalent to `\l&`|'
 ''
 'Character sequences beginning with the backslash other that those shown are invalid. All characters other than those shown are literal values and are included in '
 'the text without modification.'
)
